{"name":"Musichaos","tagline":"tool to tidy up your music chaos","body":"# Musichaos\r\n> Bring tidiness into your music chaos\r\n\r\n***\r\n\r\n`musichaos` is a tool to tidy up the chaos in your local music library on a file basis.\r\nIt pulls the tags from the audio files and structures the audio files like this:\r\n\r\n```\r\n~/music\r\n│   ├── Artist 01\r\n│   │   └── Album 01\r\n│   │   │   └── Title 01\r\n│   │   │   │── Title 02\r\n│   ├── Artist 02\r\n│   │   └── Album 01\r\n│   │   │   └── Title 01\r\n│   │   │   │── Title 02\r\n```\r\n\r\n## Installation\r\n\r\nFrom pip:\r\n\r\n```bash\r\npip install musichaos\r\n```\r\n\r\nFrom source:\r\n\r\n```\r\ngit clone https://github.com/timofurrer/musichaos\r\ncd musichaos\r\npip install .\r\n```\r\n\r\n## Usage - Command Line Interface\r\n\r\n`musichaos` can be used as a CLI tool.\r\n\r\nTo use it just specify the root directory which contains your music chaos and a target directory where to put the clean structure.\r\nThey can point to the same location.\r\n\r\n```\r\nmusichaos ~/downloads ~/music\r\n```\r\n\r\nThis will end up in the following structure\r\n```\r\n~/music\r\n│   ├── Artist 01\r\n│   │   └── Album 01\r\n│   │   │   └── Title 01\r\n│   │   │   │── Title 02\r\n│   ├── Artist 02\r\n│   │   └── Album 01\r\n│   │   │   └── Title 01\r\n│   │   │   │── Title 02\r\n```\r\n\r\nIf you do not want to move the audio file but link them instead - run the following command:\r\n```\r\nmusichaos ~/downloads ~/music --link\r\n```\r\n\r\nThis will end up in the following structure\r\n```\r\n~/music\r\n│   ├── Artist 01\r\n│   │   └── Album 01\r\n│   │   │   └── Title 01 -> ../../../downloads/Some_weird_audio_file_01.mp3\r\n│   │   │   │── Title 02 -> ../../../downloads/Some_weird_audio_file_02.mp3\r\n│   ├── Artist 02\r\n│   │   └── Album 01\r\n│   │   │   └── Title 01 -> ../../../downloads/Some_weird_audio_file_03.mp3\r\n│   │   │   │── Title 02 -> ../../../downloads/Some_weird_audio_file_04.mp3\r\n```\r\n\r\nIf you are not sure what `musichaos` will do - just do a dry run:\r\n\r\n```\r\nmusichaos ~/downloads ~/music --dry-run\r\n```\r\n\r\nLet's have a look at the help message:\r\n\r\n```\r\nUsage: __main__.py [OPTIONS] ROOTDIR TARGETDIR\r\n\r\n  Tidy up your music chaos.\r\n\r\nOptions:\r\n  -l, --link  Link audio files instead of move.\r\n  --dry-run   Run a dry run.\r\n  --help      Show this message and exit.\r\n```\r\n\r\n## Usage - Python Package\r\n\r\n`musichaos` can be imported in your python project, too. Just install it in your python environment and `import musichaos`:\r\n\r\n```python\r\nfrom musichaos import Musichaos\r\n\r\nchaos = Musichaos(rootdir)\r\nchaos.tidy_up(targetdir, link, dry_run)\r\n```\r\n\r\n## Supported Audio File Formats\r\n\r\nAt the moment the following file formats are supported:\r\n\r\n  * ASF (*.asf)\r\n  * FLAC (*.flac)\r\n  * M4A (*.m4a)\r\n  * Monkey's Audio (*.ape)\r\n  * MP3 (*.mp3)\r\n  * Musepack (*.mpc, *.mp+, *.mpp)\r\n  * Ogg Opus, Ogg FLAC, Ogg Speex, Ogg Theora, Ogg Vorbis\r\n      (*.ogg, *.ogv, *.oga, *.ogx, *.ogm, *.spx, *opus)\r\n  * True Audio (*.tta)\r\n  * WavPack (*.wv)\r\n  * OptimFROG (*.mp3)\r\n  * AIFF (*.aiff, *.aif, *.aifc)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}